MCCSAllocation:
  required:
    - channel_blocks
    - station_ids
    - subarray_beam_ids
  type: object
  properties:
    station_ids:
      type: array
      items:
        type: array
        items:
          type: integer
    channel_blocks:
      type: array
      items:
        type: integer
    subarray_beam_ids:
      type: array
      items:
        type: string
ScanDefinition:
  required:
    - scan_definition_id
    - scan_duration
  type: object
  properties:
    scan_definition_id:
      type: string
    scan_type:
      type: string
    scan_duration:
      type: integer
      x-unit: milliseconds
    target:
      type: string
      nullable: true
    dish_configuration:
      type: string
    target_beam_configurations:
      nullable: true
      type: array
      items:
        type: string
    csp_configuration:
      type: string
      nullable: true

PythonProcedure:
  type: object
  required:
    - kind
  discriminator:
    propertyName: kind
    mapping:
      inline: '#/InlineScript'
      filesystem: '#/FilesystemScript'
      git: '#/GitScript'
  properties:
    kind:
      type: string
    function_args:
      type: object
      additionalProperties:
        $ref: 'common-openapi-v1.yaml#/PythonArguments'

InlineScript:
  allOf:
    - $ref: '#/PythonProcedure'
    - type: object
      required:
        - content
      properties:
        content:
          type: string

FilesystemScript:
  allOf:
    - $ref: '#/PythonProcedure'
    - type: object
      required:
        - path
      properties:
        path:
          type: string
          example: '/path/within/repo/script.py'

GitScript:
  allOf:
    - $ref: '#/FilesystemScript'
    - type: object
      required:
        - repo
      properties:
        repo:
          type: string
        branch:
          type: string
        commit:
          type: string
SpectralWindow:
  required:
    - spectral_window_id
    - count
    - start
    - freq_min
    - freq_max
  type: object
  properties:
    spectral_window_id:
      type: string
    count:
      type: integer
    start:
      type: integer
    stride:
      type: integer
      nullable: true
    freq_min:
      type: number
      nullable: true
    freq_max:
      type: number
      nullable: true
    link_map:
      type: array
      items:
        maxItems: 2
        minItems: 2
        type: array
        items:
          type: integer
      nullable: true
Channels:
  required:
    - channels_id
    - spectral_windows
  type: object
  properties:
    channels_id:
      type: string
    spectral_windows:
      type: array
      items:
        $ref: '#/SpectralWindow'
Beam:
  required:
    - beam_id
    - function
  type: object
  properties:
    beam_id:
      type: string
    function:
      type: string
      enum:
        - "visibilities"
        - "pulsar search"
        - "pulsar timing"
        - "vlbi"
        - "transient buffer"
    search_beam_id:
      type: integer
      nullable: true
    timing_beam_id:
      type: integer
      nullable: true
    vlbi_beam_id:
      type: integer
      nullable: true
BeamMapping:
  required:
    - beam_id
  type: object
  properties:
    beam_id:
      type: string
    field_id:
      type: string
    channels_id:
      type: string
    polarisations_id:
      type: string
ScanType:
  required:
    - scan_type_id
  type: object
  properties:
    scan_type_id:
      type: string
    derive_from:
      type: string
      nullable: true
    beams:
      type: array
      items:
        $ref: '#/BeamMapping'
      nullable: true
Polarisation:
  required:
    - polarisations_id
    - corr_type
  type: object
  properties:
    polarisations_id:
      type: string
    corr_type:
      type: array
      items:
        type: string
PbDependency:
  type: object
  properties:
    pb_id:
      type: strin
      pattern: ^pb-[a-z0-9]+-[0-9]{8}-[a-z0-9]+$
    kind:
      type: array
      items:
        type: string
Script:
  required:
    - kind
    - name
    - version
  type: object
  properties:
    kind:
      type: string
      enum:
        - "realtime"
        - "batch"
    name:
      type: string
    version:
      type: string
ProcessingBlock:
  required:
    - pb_id
    - script
  type: object
  properties:
    pb_id:
      type: string
      pattern: ^pb-[a-z0-9]+-[0-9]{8}-[a-z0-9]+$
    script:
      $ref: '#/Script'
    parameters:
      type: object
      nullable: true
    dependencies:
      type: array
      nullable: true
      items:
        $ref: '#/PbDependency'
    sbi_ids:
      type: array
      items:
        type: string
        pattern: ^sbi-[a-z0-9]+-[0-9]{8}-[a-z0-9]+$
      nullable: true
ExecutionBlock:
  required:
    - eb_id
    - max_length
    - beams
    - scan_types
    - channels
    - polarisations
  type: object
  properties:
    eb_id:
      type: string
      pattern: ^eb-[a-z0-9]+-[0-9]{8}-[a-z0-9]+$
    max_length:
      type: number
    context:
      type: object
      nullable: true
    beams:
      type: array
      items:
        $ref: '#/Beam'
    scan_types:
      type: array
      items:
        $ref: '#/ScanType'
    channels:
      type: array
      items:
        $ref: '#/Channels'
    polarisations:
      type: array
      items:
        $ref: '#/Polarisation'
Resources:
  type: object
  properties:
    csp_links:
      type: array
      items:
        type: integer
      nullable: true
    receptors:
      type: array
      items:
        type: string
      nullable: true
    receive_nodes:
      type: integer
SDPConfiguration:
  type: object
  properties:
    execution_block:
      $ref: '#/ExecutionBlock'
      nullable: true
    resources:
      $ref: '#/Resources'
      nullable: true
    processing_blocks:
      type: array
      items:
        $ref: '#/ProcessingBlock'
      nullable: true
CommonConfiguration:
  required:
    - subarray_id
  type: object
  properties:
    band_5_tuning:
      type: array
      items:
        type: number
    subarray_id:
      type: integer
SubarrayConfiguration:
  required:
    - subarray_name
  type: object
  properties:
    subarray_name:
      type: string
FSPConfiguration:
  required:
    - frequency_slice_id
    - fsp_id
    - function_mode
    - integration_factor
    - zoom_factor
  type: object
  properties:
    frequency_slice_id:
      type: integer
    fsp_id:
      type: integer
    output_link_map:
      type: array
      items:
        maxItems: 2
        minItems: 2
        type: array
        items:
          type: integer
    function_mode:
      type: string
      enum:
        - "CORR"
        - "PSS-BF"
        - "PST-BF"
        - "VLBI"
    zoom_factor:
      type: integer
    integration_factor:
      type: integer
    zoom_window_tuning:
      type: integer
      nullable: true
    channel_averaging_map:
      type: array
      items:
        maxItems: 2
        minItems: 2
        type: array
        items:
          type: integer
    channel_offset:
      type: integer
      nullable: true
CBFConfiguration:
  type: object
  properties:
    fsp:
      type: array
      items:
        $ref: '#/FSPConfiguration'
CSPConfiguration:
  type: object
  properties:
    common:
      $ref: '#/CommonConfiguration'
    subarray:
      $ref: '#/SubarrayConfiguration'
    config_id:
      type: string
    cbf:
      $ref: '#/CBFConfiguration'
DishAllocation:
  required:
    - receptor_ids
  type: object
  properties:
    receptor_ids:
      type: array
      items:
        type: string
SubarrayBeamConfiguration:
  required:
    - antenna_weights
    - channels
    - phase_centre
    - subarray_beam_configuration_id
    - subarray_beam_id
    - update_rate
  type: object
  properties:
    update_rate:
      type: number
    antenna_weights:
      type: array
      items:
        type: number
    phase_centre:
      type: array
      items:
        type: number
    subarray_beam_configuration_id:
      type: string
    subarray_beam_id:
      type: string
    channels:
      type: array
      items:
        type: array
        items:
          type: integer
Target:
  type: object
  required:
    - target_id
    - pointing_pattern
    - reference_coordinate
  properties:
    target_id:
      type: string
    pointing_pattern:
      $ref: '#/PointingPattern'
    reference_coordinate:
      # code generation, inheritance + allOf is broken
      # https://github.com/OpenAPITools/openapi-generator/issues/10010
      #      $ref: '#/Coordinates'
      oneOf:
        - $ref: '#/SolarSystemObject'
        - $ref: '#/EquatorialCoordinates'
        - $ref: '#/HorizontalCoordinates'
      discriminator:
        propertyName: kind
        mapping:
          sso: '#/SolarSystemObject'
          equatorial: '#/EquatorialCoordinates'
          horizontal: '#/HorizontalCoordinates'

Coordinates:
  type: object
  required:
    - kind
  discriminator:
    propertyName: kind
    mapping:
      sso: '#/SolarSystemObject'
      equatorial: '#/EquatorialCoordinates'
      horizontal: '#/HorizontalCoordinates'
  properties:
    kind:
      type: string
SolarSystemObjectName:
  type: string
  enum:
    - "mercury"
    - "venus"
    - "mars"
SolarSystemObject:
  allOf:
    - $ref: '#/Coordinates'
    - type: object
      required:
        - name
      properties:
        name:
          $ref: '#/SolarSystemObjectName'
          default: "mars"
EquatorialCoordinatesReferenceFrame:
  type: string
  enum:
    - "icrs"
    - "fk5"
EquatorialCoordinates:
  allOf:
    - $ref: '#/Coordinates'
    - type: object
      required:
        - ra
        - dec
        - reference_frame
        - unit
      properties:
        ra:
          type: string
        dec:
          type: string
        reference_frame:
          $ref: '#/EquatorialCoordinatesReferenceFrame'
        unit:
          type: array
          items:
            type: string
HorizontalCoordinatesReferenceFrame:
  type: string
  enum:
    - "azel"
HorizontalCoordinates:
  allOf:
    - $ref: '#/Coordinates'
    - type: object
      required:
        - az
        - el
        - reference_frame
        - unit
      properties:
        az:
          type: number
        el:
          type: number
        reference_frame:
          $ref: '#/HorizontalCoordinatesReferenceFrame'
        unit:
          type: array
          items:
            type: string
PointingPattern:
  type: object
  required:
    - active
    - parameters
  properties:
    active:
      type: string
    parameters:
      type: array
      items:
        # Code generation doesn't work with arrays of polymorphic types so we must duplicate the mapping
#        $ref: '#/PointingPatternParameters'
        oneOf:
          - $ref: '#/SinglePointParameters'
          - $ref: '#/FivePointParameters'
          - $ref: '#/CrossScanParameters'
          - $ref: '#/RasterParameters'
          - $ref: '#/StarRasterParameters'
        discriminator:
          propertyName: kind
          mapping:
            SinglePointParameters: '#/SinglePointParameters'
            FivePointParameters: '#/FivePointParameters'
            CrossScanParameters: '#/CrossScanParameters'
            RasterParameters: '#/RasterParameters'
            StarRasterParameters: '#/StarRasterParameters'

PointingPatternParameters:
  type: object
  required:
    - kind
  discriminator:
    propertyName: kind
    mapping:
      SinglePointParameters: '#/SinglePointParameters'
      FivePointParameters: '#/FivePointParameters'
      CrossScanParameters: '#/CrossScanParameters'
      RasterParameters: '#/RasterParameters'
      StarRasterParameters: '#/StarRasterParameters'
  properties:
    kind:
      type: string
SinglePointParameters:
  allOf:
    - $ref: '#/PointingPatternParameters'
    - type: object
      required:
        - offset_x_arcsec
        - offset_y_arcsec
      properties:
        offset_x_arcsec:
          type: number
        offset_y_arcsec:
          type: number
FivePointParameters:
  allOf:
    - $ref: '#/PointingPatternParameters'
    - type: object
      required:
        - offset_arcsec
      properties:
        offset_arcsec:
          type: number
CrossScanParameters:
  allOf:
    - $ref: '#/PointingPatternParameters'
    - type: object
      required:
        - offset_arcsec
      properties:
        offset_arcsec:
          type: number
RasterParameters:
  allOf:
    - $ref: '#/PointingPatternParameters'
    - type: object
      required:
        - row_length_arcsec
        - row_offset_arcsec
        - n_rows
        - pa
        - unidirectional
      properties:
        row_length_arcsec:
          type: number
        row_offset_arcsec:
          type: number
        n_rows:
          type: integer
        pa:
          type: number
        unidirectional:
          type: boolean

StarRasterParameters:
  allOf:
    - $ref: '#/PointingPatternParameters'
    - type: object
      required:
        - row_length_arcsec
        - n_rows
        - row_offset_angle
        - unidirectional
      properties:
        row_length_arcsec:
          type: number
        n_rows:
          type: integer
        row_offset_angle:
          type: number
        unidirectional:
          type: boolean

DishConfiguration:
  required:
    - dish_configuration_id
    - receiver_band
  type: object
  properties:
    receiver_band:
      type: string
      enum:
        - "1"
        - "2"
        - "5a"
        - "5b"
    dish_configuration_id:
      type: string
TargetBeamConfiguration:
  required:
    - subarray_beam_configuration
    - target
    - target_beam_id
  type: object
  properties:
    target_beam_id:
      type: string
    target:
      type: string
    subarray_beam_configuration:
      type: string
SBDefinition:
  required:
    - interface
    - telescope
  type: object
  properties:
    interface:
      type: string
    sbd_id:
      nullable: true
      type: string
    metadata:
      $ref: 'common-openapi-v1.yaml#/Metadata'
    telescope:
      $ref: 'common-openapi-v1.yaml#/Telescope'
    activities:
      nullable: true
      type: object
      additionalProperties:
      # Ideally we'd reference PythonProcedure to avoid duplicating the discriminator
      # mapping but polymorphic dictionary values appears to be broken
#              $ref: '#/PythonProcedure'
        oneOf:
          - $ref: '#/InlineScript'
          - $ref: '#/FilesystemScript'
          - $ref: '#/GitScript'
        discriminator:
          propertyName: kind
          mapping:
            inline: '#/InlineScript'
            filesystem: '#/FilesystemScript'
            git: '#/GitScript'
    dish_allocations:
      nullable: true
      $ref: '#/DishAllocation'
    mccs_allocation:
      nullable: true
      $ref: '#/MCCSAllocation'
    sdp_configuration:
      nullable: true
      $ref: '#/SDPConfiguration'
    csp_configurations:
      nullable: true
      type: array
      items:
        $ref: '#/CSPConfiguration'
    subarray_beam_configurations:
      nullable: true
      type: array
      items:
        $ref: '#/SubarrayBeamConfiguration'
    targets:
      nullable: true
      type: array
      items:
        $ref: '#/Target'
    dish_configurations:
      nullable: true
      type: array
      items:
        $ref: '#/DishConfiguration'
    target_beam_configurations:
      nullable: true
      type: array
      items:
        $ref: '#/TargetBeamConfiguration'
    scan_definitions:
      nullable: true
      type: array
      items:
        $ref: '#/ScanDefinition'
    scan_sequence:
      nullable: true
      type: array
      items:
        type: string
